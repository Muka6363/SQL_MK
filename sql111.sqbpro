<?xml version="1.0" encoding="UTF-8"?><sqlb_project><db path="C:\Users\User\Desktop\CLARUSWAY\SQL\chinook.db" readonly="0" foreign_keys="1" case_sensitive_like="0" temp_store="0" wal_autocheckpoint="1000" synchronous="2"/><attached/><window><main_tabs open="structure browser pragmas query" current="3"/></window><tab_structure><column_width id="0" width="300"/><column_width id="1" width="0"/><column_width id="2" width="100"/><column_width id="3" width="3528"/><column_width id="4" width="0"/><expanded_item id="0" parent="1"/><expanded_item id="16" parent="0"/><expanded_item id="1" parent="1"/><expanded_item id="2" parent="1"/><expanded_item id="3" parent="1"/></tab_structure><tab_browse><current_table name="4,6:maintracks"/><default_encoding codec=""/><browse_table_settings><table schema="main" name="albums" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="70"/><column index="2" value="300"/><column index="3" value="68"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="customers" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="92"/><column index="2" value="80"/><column index="3" value="83"/><column index="4" value="294"/><column index="5" value="264"/><column index="6" value="132"/><column index="7" value="53"/><column index="8" value="96"/><column index="9" value="89"/><column index="10" value="128"/><column index="11" value="122"/><column index="12" value="183"/><column index="13" value="107"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="invoices" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="77"/><column index="2" value="92"/><column index="3" value="129"/><column index="4" value="264"/><column index="5" value="132"/><column index="6" value="89"/><column index="7" value="105"/><column index="8" value="125"/><column index="9" value="49"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="tracks" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="65"/><column index="2" value="300"/><column index="3" value="70"/><column index="4" value="99"/><column index="5" value="68"/><column index="6" value="300"/><column index="7" value="93"/><column index="8" value="63"/><column index="9" value="74"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table></browse_table_settings></tab_browse><tab_sql><sql name="SQL 1">-- 1. WRITE A QUERY THAT RETURNS TRACK NAME AND ITS COMPOSER FROM 
--TRACKS TABLE
--SELECT Name, Composer
--FROM tracks ;

---- 2. WRITE A QUERY THAT RETURNS ALL COLUMNS FROM TRACKS TABLE
--SELECT *
--FROM tracks ;
---- 3. WRITE A QUERY THAT RETURNS THE NAME OF COMPOSERS OF EACH TRACK
-- SELECT DISTINCT Composer
-- FROM tracks ;
--- 4. WRITE A QUERY THAT RETURNS UNIQUE ALBUMID, MEDIATYPEID FROM TRACKS TABLE 
--SELECT AlbumId, MediaTypeId
--FROM tracks ;
-- 5. WRITE A QUERY THAT RETURNS TRACK NAME AND TRACKID OF ‘Jorge Ben’
--SELECT TrackId, Name
--FROM tracks
--WHERE Composer = 'Jorge Ben' ;
--- 5.WRITE A QUERY THAT RETURNS ALL INFO OF THE INVOICES OF WHICH TOTAL AMOUNT IS GREATER THAN $25
-- SELECT *
-- FROM invoices
-- WHERE total &gt; 25
-- 6. WRITE A QUERY THAT RETURNS ALL INFO OF THE INVOICES OF WHICH TOTAL AMOUNT IS LESS THAN $15. JUST RETURN 5 ROWS
-- SELECT *
-- FROM invoices
-- WHERE total &lt; 15
-- LIMIT 5 ;
-----------------
-- SELECT *
-- FROM invoices
-- WHERE total &gt; 10
-- ORDER BY total DESC
-- LIMIT 2 ;
-------------------------
-- WRITE A QUERY THAT RETURNS ALL INFO OF THE INVOICES OF WHICH 
-- BILLING COUNTRY IS NOT CANADA. THEN SORT THE TOTAL AMOUNTS IN 
-- ASCENDING ORDER, LASTLY DISPLAY TOP 10 ROWS
-- SELECT *
-- FROM invoices
-- WHERE BillingCountry NOT IN ('Canada') 
-- ORDER BY total ASC
-- LIMIT 10 ;
---------WRITE A QUERY THAT RETURNS INVOICEID, CUSTOMERID AND TOTAL 
-- DOLLAR AMOUNT FOR EACH INVOICE. THEN SORT THEM FIRST BY 
-- CUSTOMERID IN ASCENDING, THEN TOTAL DOLLAR AMOUNT IN 
-- DESCENDING ORDER.
-- SELECT InvoiceId, CustomerId, total
-- FROM invoices
-- ORDER BY CustomerId ASC, total DESC ;
---------------- WRITE A QUERY THAT RETURNS ALL TRACK NAMES THAT START WITH ‘B’ AND END WITH ‘S’
-- SELECT name
-- FROM tracks
-- WHERE name LIKE 'B%S' ;
----------------
-- SELECT InvoiceDate
-- FROM invoices
-- WHERE InvoiceDate BETWEEN '2008-01-01' AND '2010-12-31' 
-- ORDER BY InvoiceDate DESC;
------------
-- SELECT customers.FirstName, customers.LastName, invoices.BillingCountry
-- FROM customers 
-- INNER JOIN invoices ON invoices.CustomerId = customers.CustomerId 
-- WHERE invoices.BillingCountry IN ('Norway', 'Belgium') ;
---------
-- SELECT name, Composer
-- FROM tracks 
-- WHERE Composer LIKE '%ZAPPA%' ;

-- SELECT  COUNT (DISTINCT TrackId), COUNT(DISTINCT InvoiceId)
-- FROM tracks, invoices ;

-----------------
-- SELECT  COUNT (DISTINCT Composer)
-- FROM tracks ;
-- SELECT  COUNT (DISTINCT Composer)
-- FROM tracks ;
---------------------------------------------
-- SELECT Composer, COUNT(*)
-- FROM tracks
-- GROUP BY Composer;
-- SELECT Composer, COUNT(Composer)
-- FROM tracks
-- GROUP BY Composer;
-- SELECT Composer, COUNT(Composer)
-- FROM tracks
-- WHERE Composer IS NOT NULL
-- GROUP BY Composer;
-------------------------------------------
select TrackId, name, AlbumId
from  tracks
WHERE name IN ('Prenda Minha', 'Heart of the Night','Out Of Exile') ;
</sql><current_tab id="0"/></tab_sql></sqlb_project>
